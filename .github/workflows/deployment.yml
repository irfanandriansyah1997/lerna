name: Release Asset

on:
  push:
    branches:
      - feature-*
      - hotfix-*
  pull_request:
    branches:
      - main
      - feature-*
      - hotfix-*
    types: [closed]

jobs:
  check-commit:
    if: "!contains(github.event.head_commit.message, 'chore(release)')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Should it be skipped?
        env:
          COMMIT_FILTER: 'chore(release)'
          CI_STAGE_NAME: 'CHECK_COMMIT'
          CURRENT_BRANCH: ${{ github.ref }}
        run: |
          bash etc/deployments/cd.sh

  do-linter:
    if: "!contains(github.event.head_commit.message, 'chore(release)')"
    needs: check-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: 'https://npm.pkg.github.com/'

      - name: Do linter
        env:
          CI_STAGE_NAME: 'TEST'
        run: |
          bash etc/deployments/cd.sh

  publish-gpr:
    if: "!contains(github.event.head_commit.message, 'chore(release)')"
    # needs: do-linter
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          token: ${{ secrets.TOKEN_BUILD }}
          fetch-depth: 0

      - uses: webfactory/ssh-agent@v0.5.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: 'https://npm.pkg.github.com/'

      - name: Doable Deploy
        id: deploy
        env:
          CI_STAGE_NAME: 'DOABLE_PUBLISH'
          CURRENT_BRANCH: ${{ github.ref }}
        run: |
          bash etc/deployments/cd.sh

      - name: Ensure access
        if: env.CI_SKIP_PUBLISH == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.TOKEN_BUILD }}
        run: |
          npm whoami --registry https://npm.pkg.github.com/

      # - name: Config git user
      #   if: steps.deploy.outcome == 'success'
      #   run: |
      #     git config --global user.name "${{ github.actor }}"
      #     git config --global user.email "irfanandriansyah10@gmail.com"

      # - name: Bump versions and publish packages
      #   if: steps.deploy.outcome == 'success'
      #   env:
      #     CI_STAGE_NAME: 'BUILD'
      #     CURRENT_BRANCH: ${{ github.ref }}
      #     LERNA_ACTION: '--create-release github'
      #     GH_TOKEN: ${{ secrets.TOKEN_BUILD }}
      #     NODE_AUTH_TOKEN: ${{ secrets.TOKEN_BUILD }}
      #   run: |
      #     bash etc/deployments/cd.sh
